" default config
set nocompatible
filetype off
syntax enable

set expandtab
set mouse=a
set modifiable

set shiftwidth=2
set softtabstop=2
set smarttab
" set textwidth=72

set norelativenumber
set nu rnu
"set ruler
set cursorline
set showcmd

:imap jk <Esc>

" clipboard setting
if has('macunix') " macOS
  set clipboard^=unnamed,unnamedplus
elseif has('unix') " Linux 
  " Set X11 clipboard configuration (replace xclip path if needed)
  set clipboard=unnamedplus
"    if has('autocmd')
"        au BufReadPost * :set pastetype=pastef
"        au BufLeavePost * :set pastetype=
"        vnoremap <C-y> :'<,'>w !xclip -selection clipboard<Cr><Cr>
"        nnoremap <C-v> "+p
"    endif
else
  " TODO: Handle other operating systems
endif

" tab
imap <C-t> <ESC>:tabnew<cr>
nmap <C-t> <ESC>:tabnew<cr>
map <C-t> <ESC>:tabnew<cr>
" tab

" TextEdit might fail if hidden is not set.
set hidden

" Some servers have issues with backup files, see #649.
set nobackup
set nowritebackup

" Give more space for displaying messages.
set cmdheight=2

" Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
" delays and poor user experience.
set updatetime=300

" Don't pass messages to |ins-completion-menu|.
set shortmess+=c

" Always show the signcolumn, otherwise it would shift the text each time
" diagnostics appear/become resolved.
set signcolumn=auto
" if has("patch-8.1.1564")
"   " Recently vim can merge signcolumn and number column into one
"   set signcolumn=number
" else
"   set signcolumn=yes
" endif

" highlight search hits
set hlsearch
set incsearch
set linebreak

" only load plugins if Plug detected
if filereadable(expand("~/.vim/autoload/plug.vim"))
  call plug#begin('~/.vim/plugged')
  Plug 'junegunn/vim-easy-align'
  Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
  Plug 'junegunn/fzf.vim'
  Plug 'vim-airline/vim-airline'
  Plug 'scrooloose/nerdtree'
  Plug 'tpope/vim-surround'

  " git
  Plug 'tpope/vim-fugitive'
  Plug 'airblade/vim-gitgutter'
  Plug 'editorconfig/editorconfig-vim'
  call plug#end()

  " nerd tree conf
  let g:NERDTreeShowLineNumbers=1
  autocmd BufEnter NERD_* setlocal rnu
  map <C-n> :NERDTreeToggle<CR>
  autocmd BufEnter * silent! lcd %:p:h
  let g:NERDTreeShowHidden=1


  " fuzzy finder 
  function! s:find_git_root()
    return system('git rev-parse --show-toplevel 2> /dev/null')[:-2]
  endfunction
  
  command! ProjectFiles execute 'Files' s:find_git_root()
  
  imap <C-p> <ESC>:ProjectFiles<cr>
  nmap <C-p> <ESC>:ProjectFiles<cr>
  map <C-p> <ESC>:ProjectFiles<cr>
  
  let g:ag_working_path_mode="r"

  " Git
  nmap <leader>gs :G<CR>
  nmap <leader>gd :Gdiffsplit<CR>
  nmap <leader>gc :Git commit<CR>
  nmap <leader>gh :diffget //3<CR>
  nmap <leader>gl :diffget //2<CR>
endif

" styling 
set statusline+=%=
set statusline+=%#warningmsg#
set statusline+=\ %{LinterStatus()}
set statusline+=%*
set statusline+=%{FugitiveStatusline()}
set background=dark
set t_Co=256
